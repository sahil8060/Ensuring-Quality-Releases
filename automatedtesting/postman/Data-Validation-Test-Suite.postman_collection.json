{
	"info": {
		"_postman_id": "8edbb0af-780b-47d4-932e-c67d1cd1dfa1",
		"name": "Data Validation Test Suite",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create User Record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var json = pm.response.json();",
							"pm.environment.set(\"ID\", json.ID);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"// reference source https://sqa.stackexchange.com/questions/37963/how-to-verify-response-body-as-a-test-in-postman",
							"pm.test(\"Validate create users record Data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.ID).to.equal(0);",
							"    pm.expect(jsonData.UserName).to.equal(\"Sahil\");",
							"    pm.expect(jsonData.Password).to.equal(\"You@Password1\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"UserName\": \"{{name}}\",\n    \"Password\": \"{{Password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{azureappurl}}/api/Users",
					"host": [
						"{{azureappurl}}"
					],
					"path": [
						"api",
						"Users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Users Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{azureappurl}}/api/Users",
					"host": [
						"{{azureappurl}}"
					],
					"path": [
						"api",
						"Users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"// reference source https://sqa.stackexchange.com/questions/37963/how-to-verify-response-body-as-a-test-in-postman",
							"",
							"pm.test(\"Validate create users record Data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.ID).to.equal(1);",
							"    pm.expect(jsonData.UserName).to.equal(\"User 1\");",
							"    pm.expect(jsonData.Password).to.equal(\"Password1\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{azureappurl}}/api/Users/{{id}}",
					"host": [
						"{{azureappurl}}"
					],
					"path": [
						"api",
						"Users",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"// reference source https://sqa.stackexchange.com/questions/37963/how-to-verify-response-body-as-a-test-in-postman",
							"",
							"pm.test(\"Validate Update users record Data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.ID).to.equal(0);",
							"    pm.expect(jsonData.UserName).to.equal(\"Sahil\");",
							"    pm.expect(jsonData.Password).to.equal(\"You@Password1\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"UserName\": \"{{name}}\",\n    \"Password\": \"{{Password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{azureappurl}}/api/Users/1",
					"host": [
						"{{azureappurl}}"
					],
					"path": [
						"api",
						"Users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User Record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{azureappurl}}/api/Users/{{id}}",
					"host": [
						"{{azureappurl}}"
					],
					"path": [
						"api",
						"Users",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}